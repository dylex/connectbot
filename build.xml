<?xml version="1.0" encoding="UTF-8"?>
<!-- vim: set ts=4 sw=4 et: -->
<project name="ConnectBot" default="help">

<!-- The local.properties file is created and updated by the 'android'
     tool.
     It contains the path to the SDK. It should *NOT* be checked into
     Version Control Systems. -->
    <property file="local.properties" />

    <!-- The build.properties file can be created by you and is never touched
         by the 'android' tool. This is the place to change some of the
         default property values used by the Ant rules.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="build.properties" />

    <!-- The default.properties file is created and updated by the 'android'
         tool, as well as ADT.
         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <property file="default.properties" />

    <!-- Custom Android task to deal with the project target, and import the
         proper rules.
         This requires ant 1.6.0 or above. -->
    <path id="android.antlibs">
        <pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
        <pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
        <pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
    </path>

<!-- Begin custom ConnectBot stuff -->

    <!-- Output directory for .po files. -->
    <property name="locale.dir" value="locale" />

    <!-- Default args to pass to a2po for .po generation. -->
    <property name="a2po.args" value="--groups strings --template fortune/fortune.pot --layout 'fortune/fortune-%(locale)s.po'"/>

    <!-- File names for launchpad translations. -->
    <property name="launchpad.export.file" value="launchpad-export.tar.gz"/>
    <property name="launchpad.import.file" value="launchpad-import.tar.gz"/>

    <target name="-pre-build" depends="update-version"/>

    <target name="help">
        <!-- displays starts at col 13
              |13                                                              80| -->
        <echo>Android Ant Build. Available targets:</echo>
        <echo>   help:      Displays this help.</echo>
        <echo>   clean:     Removes output files created by other targets.</echo>
        <echo>   compile:   Compiles project's .java files into .class files.</echo>
        <echo>   debug:     Builds the application and signs it with a debug key.</echo>
        <echo>   release:   Builds the application. The generated apk file must be</echo>
        <echo>              signed before it is published.</echo>
        <echo>   install:   Installs/reinstalls the debug package onto a running</echo>
        <echo>              emulator or device.</echo>
        <echo>              If the application was previously installed, the</echo>
        <echo>              signatures must match.</echo>
        <echo>   uninstall: Uninstalls the application from a running emulator or</echo>
        <echo>              device.</echo>
	<echo>   translations-import: Import translations from a Launchpad-style</echo>
	<echo>              Rosetta translation.</echo>
	<echo>   translations-export: Export translations to a Launchpad-style</echo>
	<echo>              Rosetta translation.</echo>

    </target>

    <target name="update-version" description="Updates the Version.java file with current Git revision">
        <echo>Updating resources with Git revision and build date...</echo>

        <tstamp>
            <format property="build.date" pattern="yyyy.MM.dd" />
        </tstamp>

        <!-- Get the version name from the android manifest, will en up in property ${manifest.android:versionName} -->
        <xpath input="AndroidManifest.xml" expression="/manifest/@android:versionName"
                    output="manifest.version.name" />

        <!-- tell git to ignore changes to the version xml -->
        <exec executable="git">
            <arg line="update-index --assume-unchanged res/values/version.xml"/>
        </exec>

        <!-- find out the description of the current Git commit -->
        <exec executable="git" outputproperty="git.revision">
            <arg line="describe --match 'v[0-9]*' --dirty"/>
        </exec>

        <replaceregexp file="${resource.absolute.dir}/values/notrans.xml" encoding="utf8" match='(\x3Cstring name="msg_version">)[^\x3C]*(\x3C/string>)'
            replace='\1${ant.project.name} ${manifest.version.name} (${git.revision} ${build.date})\2' />

        <echo>Updated "msg_version" to: ${ant.project.name} ${manifest.version.name} (${git.revision} ${build.date})</echo>
    </target>

    <target name="clean"
        description="Clean up the result of the build process">
        <delete dir="${out.absolute.dir}"/>
        <delete dir="${gen.absolute.dir}"/>
	<ant dir="tests" target="clean" />
    </target>

    <target name="tests" depends="install">
        <echo>Building and installing tests...</echo>
        <exec executable="ant" failonerror="true">
            <arg value="-f" />
            <arg value="tests/build.xml" />
            <arg value="install"/>
        </exec>
        <echo>Running test cases...</echo>
        <exec executable="${adb}">
            <arg value="shell" />
            <arg value="am" />
            <arg value="instrument" />
            <arg value="-w" />
            <arg value="${application-package}.tests/android.test.InstrumentationTestRunner" />
            <redirector outputproperty="test.results"/>
        </exec>
        <fail message="Some unit tests failed:${line.separator}${test.results}">
            <condition>
                <contains string="${test.results}" substring="FAILURES"/>
            </condition>
        </fail>
    </target>

    <!-- Translations come from launchpad.net and are placed in the
         locale/ subdirectory. -->
    <target name="translations-import">
        <untar src="${launchpad.export.file}" dest="${locale.dir}" compression="gzip"/>
        <exec executable="a2po" failonerror="true">
            <arg value="import"/>
            <arg line="${a2po.args}"/>
        </exec>
    </target>

    <!-- Translations are to be uploaded to launchpad.net as a tar ball
         created from the locale/ subdirectory. -->
    <target name="translations-export">
        <exec executable="a2po" failonerror="true">
            <arg value="export"/>
            <arg line="${a2po.args}"/>
        </exec>
        <tar destfile="${launchpad.import.file}"
            compression="gzip"
            basedir="${locale.dir}"
            includes="**/*.pot **/*.po" />
    </target>

<!-- End custom ConnectBot stuff -->

    <taskdef name="setup"
        classname="com.android.ant.SetupTask"
        classpathref="android.antlibs" />

    <setup />
</project>
